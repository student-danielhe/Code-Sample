@using TAApplication.Areas.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<TAUser> SignInManager
@inject UserManager<TAUser> UserManager


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <!--This will retrive current User as a object-->
            @{
                var taUser=await UserManager.FindByNameAsync(User.Identity.Name);
                string UID = taUser.Unid;
            }
        
        @if (User.IsInRole("Admin")){
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello Admin @UID</a>
        }
        @if(User.IsInRole("Professor")){
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello Professor @UID</a>
        }
        @if(User.IsInRole("Applicant")){
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello Applicant @UID</a>
        }

        
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
